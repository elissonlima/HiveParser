-- DROP TABLE GHP00355.TRANBRU_TMP_CLST_BACE_REFS_${DAT_RFRC};
-- CREATE TABLE GHP00355.TRANBRU_TMP_CLST_BACE_REFS_${DAT_RFRC} AS
-- SELECT DISTINCT ANOMES FROM
-- DM3.DM3_RISCO_BACEN
-- WHERE
-- ANOMES <= ${DAT_RFRC}
-- ORDER BY
-- ANOMES DESC
-- LIMIT 3
-- ;


DROP TABLE GHP00355.TRANBRU_TMP_CLST_BACE_SEL_${DAT_RFRC};
CREATE TABLE GHP00355.TRANBRU_TMP_CLST_BACE_SEL_${DAT_RFRC} AS
SELECT
ANOMES,
CPF_CNPJ,
CDMODOPE
-- ,
-- SUM(CASE WHEN TRIM(UPPER(IDORIRSC)) = 'M' THEN VAL_VENCER ELSE 0 END) AS VAL_VENCER_MERC,
-- SUM(CASE WHEN TRIM(UPPER(IDORIRSC)) = 'I' THEN VAL_VENCER ELSE 0 END) AS VAL_VENCER_ITAU
FROM
(
    SELECT
        ANOMES
    -- CAST(TRIM(IDCPFCNP) AS BIGINT) AS CPF_CNPJ,
    -- CAST(TRIM(CDMODOPE) AS INT) AS CDMODOPE,
    -- TRIM(UPPER(IDORIRSC)) AS IDORIRSC,
    -- CAST(TRIM(VLAV0030) AS DOUBLE) / 100 + CAST(TRIM(VLAV0060) AS DOUBLE) / 100 + CAST(TRIM(VLAV0090) AS DOUBLE) / 100 +
    -- CAST(TRIM(VLAV0180) AS DOUBLE) / 100 + CAST(TRIM(VLAV0360) AS DOUBLE) / 100 + CAST(TRIM(VLAV0720) AS DOUBLE) / 100 +
    -- CAST(TRIM(VLAV1080) AS DOUBLE) / 100 + CAST(TRIM(VLAV1440) AS DOUBLE) / 100 + CAST(TRIM(VLAV1800) AS DOUBLE) / 100 +
    -- CAST(TRIM(VLAV5400) AS DOUBLE) / 100 + CAST(TRIM(VLAV5499) AS DOUBLE) / 100 + CAST(TRIM(VLAV9999) AS DOUBLE) / 100  AS VAL_VENCER
    FROM
    DM3.DM3_RISCO_BACEN T1
    WHERE 
    TRIM(UPPER(CDTPCLIN)) = "F" AND T1.ANOMES IN (SELECT ANOMES FROM GHP00355.TRANBRU_TMP_CLST_BACE_REFS_${DAT_RFRC})
) A
GROUP BY ANOMES,
CPF_CNPJ,
CDMODOPE
;


-- DROP TABLE GHP00355.TRANBRU_TMP_CLST_BACE_CRED_${DAT_RFRC};
-- CREATE TABLE GHP00355.TRANBRU_TMP_CLST_BACE_CRED_${DAT_RFRC} AS
-- SELECT
-- CPF_CNPJ,
-- CASE WHEN AVG(SDO_LIS_ITAU) > 0 THEN 1 ELSE 0 END AS POSSE_LIS_ITAU,
-- AVG(COALESCE(SDO_DEV_LP,        0))                AS SDO_DEV_LP,
-- AVG(COALESCE(SDO_DEV_CP,        0))                AS SDO_DEV_CP,
-- AVG(COALESCE(SDO_CREDI_ITAU,    0))                AS SDO_CREDI_ITAU,
-- AVG(COALESCE(SDO_CONSIG_ITAU,   0))                AS SDO_CONSIG_ITAU,
-- AVG(COALESCE(SDO_FIN_VEIC_ITAU, 0))                AS SDO_FIN_VEIC_ITAU,
-- AVG(COALESCE(SDO_FIN_IMOB_ITAU, 0))                AS SDO_FIN_IMOB_ITAU,
-- AVG(COALESCE(SDO_CREDI_MERC,    0))                AS SDO_CREDI_MERC,
-- AVG(COALESCE(SDO_CONSIG_MERC,   0))                AS SDO_CONSIG_MERC,
-- AVG(COALESCE(SDO_FIN_VEIC_MERC, 0))                AS SDO_FIN_VEIC_MERC,
-- AVG(COALESCE(SDO_FIN_IMOB_MERC, 0))                AS SDO_FIN_IMOB_MERC
-- FROM
-- (
--     SELECT
--     ANOMES,
--     CPF_CNPJ,
--     SUM(CASE WHEN CDMODOPE IN (401,901,902,903,990)         THEN VAL_VENCER_MERC                   ELSE 0 END) AS SDO_DEV_LP,
--     SUM(CASE WHEN CDMODOPE IN (201,202,203,204,210,213,406) THEN VAL_VENCER_MERC                   ELSE 0 END) AS SDO_DEV_CP,
--     SUM(CASE WHEN CDMODOPE IN (201, 213)                    THEN VAL_VENCER_ITAU                   ELSE 0 END) AS SDO_LIS_ITAU,
--     SUM(CASE WHEN CDMODOPE IN (203)                         THEN VAL_VENCER_ITAU                   ELSE 0 END) AS SDO_CREDI_ITAU,
--     SUM(CASE WHEN CDMODOPE IN (202)                         THEN VAL_VENCER_ITAU                   ELSE 0 END) AS SDO_CONSIG_ITAU,
--     SUM(CASE WHEN CDMODOPE IN (401)                         THEN VAL_VENCER_ITAU                   ELSE 0 END) AS SDO_FIN_VEIC_ITAU,
--     SUM(CASE WHEN CDMODOPE IN (901, 902, 903, 990)          THEN VAL_VENCER_ITAU                   ELSE 0 END) AS SDO_FIN_IMOB_ITAU,
--     SUM(CASE WHEN CDMODOPE IN (203)                         THEN (VAL_VENCER_MERC-VAL_VENCER_ITAU) ELSE 0 END) AS SDO_CREDI_MERC,
--     SUM(CASE WHEN CDMODOPE IN (202)                         THEN (VAL_VENCER_MERC-VAL_VENCER_ITAU) ELSE 0 END) AS SDO_CONSIG_MERC,
--     SUM(CASE WHEN CDMODOPE IN (401)                         THEN (VAL_VENCER_MERC-VAL_VENCER_ITAU) ELSE 0 END) AS SDO_FIN_VEIC_MERC,
--     SUM(CASE WHEN CDMODOPE IN (901, 902, 903, 990)         THEN (VAL_VENCER_MERC-VAL_VENCER_ITAU)  ELSE 0 END) AS SDO_FIN_IMOB_MERC
--     FROM
--     GHP00355.TRANBRU_TMP_CLST_BACE_SEL_${DAT_RFRC}
--     GROUP BY ANOMES,  CPF_CNPJ
-- ) A
-- GROUP BY 
-- CPF_CNPJ
-- ;